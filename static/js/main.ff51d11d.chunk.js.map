{"version":3,"sources":["assets/images/delete.svg","assets/images/camera.svg","assets/images/film-reel.svg","assets/images/cancel.svg","reducers/index.js","reducers/movies.js","reducers/ratings.js","reducers/isLoaded.js","reducers/error.js","reducers/user.js","reducers/selectedMovie.js","components/SmallMovieCard/SmallMovieCard.js","components/LoadingImage/LoadingImage.js","containers/MoviesContainer/MoviesContainer.js","actions/index.js","components/Header/Header.js","components/RatingsPage/RatingsPage.js","apiCalls/apiCalls.js","components/RatingBox/RatingBox.js","components/MovieInfoComponent/MovieInfoComponent.js","containers/Login/Login.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","movies","state","action","type","ratings","rating","isLoaded","error","user","selectedMovie","id","SmallMovieCard","props","redirect","setState","isRedirected","this","img","title","rate","deleteButton","headerStyles","backgroundImage","backgroundSize","backgroundPosition","width","height","to","className","style","src","deleteIcon","alt","onClick","Component","LoadingImage","cameraIcon","filmIcon","MoviesContainer","createCards","dataset","map","movie","key","poster_path","average_rating","toFixed","notification","connect","addMovies","addLoaded","hasError","addRatings","addRating","addUser","removeUser","addSelectedMovie","dispatch","bindActionCreators","toggleLogin","RatingsPage","find","movie_id","length","getMovies","a","async","fetch","response","ok","Error","json","getRatings","url","postRating","user_id","options","method","body","JSON","stringify","headers","result","postSignIn","newUser","RatingBox","toggleClicked","isClicked","chooseRating","event","parseInt","target","getAttribute","replace","ratingFull","numbers","Array","fill","undefined","el","i","cancelIcon","MovieInfoComponent","release_date","overview","year","split","cardStyles","Login","handleChange","email","password","errorMsg","value","console","log","validateForm","handleSubmit","preventDefault","fetchUser","history","push","autoComplete","onChange","withRouter","App","fetchMoviesData","message","fetchRatingsData","exact","path","render","match","params","Boolean","window","location","hostname","store","createStore","composeWithDevTools","storedApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff51d11d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.4236a780.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.70b57f12.svg\";","module.exports = __webpack_public_path__ + \"static/media/film-reel.d16afa6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel.1d087161.svg\";","import { combineReducers } from 'redux';\nimport { movies } from './movies';\nimport { isLoaded } from './isLoaded';\nimport { error } from './error';\nimport { user } from './user';\nimport { ratings } from './ratings';\nimport { selectedMovie } from './selectedMovie';\n\nconst rootReducer = combineReducers({\n  movies,\n  ratings,\n  isLoaded,\n  error,\n  user,\n  selectedMovie\n})\n\nexport default rootReducer\n","export const movies = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_MOVIES':\n      return action.movies\n    default:\n      return state\n  }\n}\n","export const ratings = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_RATINGS':\n      return action.ratings;\n    case 'ADD_RATING':\n      return [...state, action.rating]\n    default:\n      return state;\n  }\n}\n","export const isLoaded = (state = false, action) => {\n  switch (action.type) {\n    case 'IS_LOADED':\n      return action.isLoaded\n    default:\n      return state\n  }\n}\n","export const error = (state = '', action) => {\n  switch (action.type) {\n    case 'HAS_ERROR':\n      return action.error\n    default:\n      return state\n  }\n}\n","export const user = (state = null, action) => {\n  switch (action.type) {\n    case 'ADD_USER':\n      return action.user\n    case 'REMOVE_USER':\n      return null\n    default:\n      return state;\n  }\n}\n","export const selectedMovie = (state = null, action) => {\n  switch (action.type) {\n    case 'ADD_SELECTED_MOVIE':\n      return action.id;\n    default:\n      return state;\n  }\n}\n","import React, { Component } from 'react';\nimport './SmallMovieCard.scss'\nimport { Redirect } from 'react-router-dom';\nimport deleteIcon from '../../assets/images/delete.svg';\nimport propTypes from 'prop-types';\n\nclass SmallMovieCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isRedirected: false\n    }\n  }\n\n  redirect = () => {\n    this.setState({isRedirected: true})\n  }\n\n  render() {\n    const { id, img, title, rate, deleteButton } = this.props\n\n    const headerStyles = {\n      backgroundImage: `url(\"${img}\")`,\n      backgroundSize: '100%',\n      backgroundPosition: 'center',\n      width: '230px',\n      height: '300px'\n    }\n\n    return (\n      (this.state.isRedirected)\n        ? <Redirect to={`/movies/${id}`} />\n        : <section className=\"small-movie-card\">\n          <header style={headerStyles}>\n            {deleteButton && <img src={deleteIcon} alt=\"delete icon\" />}\n          </header>\n          <p className=\"rate-number\">{ rate }</p>\n          <div className=\"title-block\">\n            <p className=\"title\" onClick={this.redirect}>{ title }</p>\n          </div>\n        </section>\n    );\n  }\n}\n\nSmallMovieCard.propTypes = {\n  id: propTypes.number, \n  img: propTypes.string, \n  title: propTypes.string, \n  rate: propTypes.string, \n  deleteButton: propTypes.func\n}\n\nexport default SmallMovieCard;\n","import React from 'react';\nimport './LoadingImage.scss'\nimport cameraIcon from '../../assets/images/camera.svg'\nimport filmIcon from '../../assets/images/film-reel.svg'\n\nconst LoadingImage = () => {\n  return (\n    <div className=\"loading\">\n      <img src={cameraIcon} alt=\"camera\"/>\n      <div className=\"light\"></div>\n      <img src={filmIcon} alt=\"film\" className=\"movie-circle\" />\n    </div>\n  );\n}\n\nexport default LoadingImage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './MoviesContainer.scss';\nimport SmallMovieCard from '../../components/SmallMovieCard/SmallMovieCard';\nimport LoadingImage from '../../components/LoadingImage/LoadingImage';\n\nexport class MoviesContainer extends Component {\n\n  createCards = dataset => {\n    return dataset.map(movie => (\n      <SmallMovieCard\n        key={movie.id}\n        id={movie.id}\n        img={movie.poster_path}\n        rate={movie.average_rating.toFixed(1)}\n        title={movie.title} />\n    ));\n  }\n\n  render() {\n    const { movies, isLoaded, error } = this.props;\n    const notification = (error !== '')\n      ? <h2 className=\"error\">{error}</h2>\n      : <LoadingImage />\n\n    return (\n      <main className=\"movies-container\">\n        { (isLoaded && error === '')\n            ? this.createCards(movies)\n            : notification }\n      </main>\n    )\n  }\n}\n\nexport const mapStateToProps = ({movies, isLoaded, error}) => ({\n  movies,\n  isLoaded,\n  error\n})\n\nexport default connect(mapStateToProps)(MoviesContainer);\n","export const addMovies = movies => ({\n  type: 'ADD_MOVIES',\n  movies\n});\n\nexport const addLoaded = isLoaded => ({\n  type: 'IS_LOADED',\n  isLoaded\n});\n\nexport const hasError = error => ({\n  type: 'HAS_ERROR',\n  error\n})\n\nexport const addRatings = ratings => ({\n  type: 'ADD_RATINGS',\n  ratings\n});\n\nexport const addRating = rating => ({\n  type: 'ADD_RATING',\n  rating\n});\n\nexport const addUser = user => ({\n  type: 'ADD_USER',\n  user\n});\n\nexport const removeUser = () => ({\n  type: 'REMOVE_USER',\n  user: null\n});\n\nexport const addSelectedMovie = id => ({\n  type: 'ADD_SELECTED_MOVIE',\n  id\n})\n","import React from 'react';\nimport './Header.scss';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { removeUser } from '../../actions';\n\nexport const Header = ({ user, removeUser }) => {\n  let toggleLogin;\n  user ?\n  toggleLogin = <button id=\"logout\" className=\"toggleLogin\" onClick={removeUser}>Logout</button> : toggleLogin = <Link id=\"login-link\" to=\"/login\">\n    <button id=\"login\" className=\"toggleLogin\">\n      Login\n    </button>\n  </Link>;\n  return (\n    <header className=\"header\">\n      <h1>Rancid Tomatillos</h1>\n      {toggleLogin}\n    </header>\n  )\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user\n});\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    removeUser\n  }, dispatch)\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport './RatingsPage.scss'\nimport SmallMovieCard from '../SmallMovieCard/SmallMovieCard'\n\nexport class RatingsPage extends Component {\n  createCards = (movies, ratings) => {\n    return ratings.map(rating => {\n      const movie = movies.find(movie => movie.id === rating.movie_id);\n      return (\n        <SmallMovieCard\n          key={rating.id}\n          id={movie.id}\n          img={movie.poster_path}\n          rate={rating.rating}\n          title={movie.title}\n          deleteButton={true}/>\n      )\n    });\n  }\n\n  render() {\n    let { movies, ratings, user } = this.props;\n    const notification = (user)\n      ? 'You don\\'t have any rating yet!'\n      : 'Please, log in to see your ratings!'\n\n    return (\n      <div className=\"ratings\">\n        <NavLink to='/'>&#8592; back to all movies</NavLink>\n        { (user && ratings.length !== 0)\n            ? this.createCards(movies, ratings)\n            : <h2 className=\"error\">{notification}</h2>\n        }\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = ({movies, ratings, user}) => ({\n  movies,\n  ratings,\n  user\n})\n\nexport default connect(mapStateToProps)(RatingsPage);\n","export const getMovies = async () => {\n  const url = 'https://rancid-tomatillos.herokuapp.com/api/v1/movies'\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('There was an error getting movies.');\n  }\n  const movies = await response.json();\n  return movies\n}\n\nexport const getRatings = async (id) => {\n  const url = `https://rancid-tomatillos.herokuapp.com/api/v1/users/${id}/ratings`\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('There was an error getting ratings.');\n  }\n  const ratings = await response.json();\n  return ratings\n}\n\nexport const postRating = async (rating, user_id) => {\n  const url = `https://rancid-tomatillos.herokuapp.com/api/v1/users/${user_id}/ratings`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(rating),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const response = await fetch(url, options);\n\n  if (!response.ok) {\n    throw new Error('There was an error posting rating.');\n  }\n\n  const result = await response.json();\n  return result;\n}\n\nexport const postSignIn = async (user) => {\n  const url = 'https://rancid-tomatillos.herokuapp.com/api/v1/login';\n  let options = {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: {\n     'Content-Type': 'application/json'\n    }\n  };\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    throw new Error('There was a problem signing in')\n  }\n  const newUser = await response.json();\n  return newUser;\n}\n","import React, { Component } from 'react';\nimport './RatingBox.scss';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport cancelIcon from '../../assets/images/cancel.svg';\nimport { postRating } from '../../apiCalls/apiCalls'\nimport { addRating } from '../../actions'\n\nexport class RatingBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false\n    }\n  }\n\n  toggleClicked = () => {\n    this.setState({isClicked: !this.state.isClicked})\n  }\n\n  chooseRating = async (event) => {\n    const {movie_id, addRating} = this.props\n    const rating = parseInt(event.target.getAttribute('id').replace('number', ''));\n    const ratingFull = {\n      movie_id,\n      rating\n    }\n    await postRating(ratingFull, this.props.user_id);\n    addRating(ratingFull);\n  }\n\n  render() {\n    const numbers = new Array(10)\n      .fill(undefined)\n      .map((el, i) => (\n        <p\n          key={`number${i+1}`}\n          className=\"rate-number\"\n          onClick={this.chooseRating}\n          id={`number${i+1}`}>{i+1}</p>\n      ));\n\n    return (\n      (!this.state.isClicked)\n        ? <button className=\"add-rating\" onClick={this.toggleClicked}>add rating</button>\n        : (\n          <section className=\"rating-box\">\n            <h3>Choose rating</h3>\n            <div>\n              {numbers}\n              <img onClick={this.toggleClicked} src={cancelIcon} alt=\"cancel\"/>\n            </div>\n          </section>\n        )\n    )\n  }\n}\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addRating\n  }, dispatch)\n)\n\nexport default connect(null, mapDispatchToProps)(RatingBox);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './MovieInfoComponent.scss'\nimport { Redirect } from 'react-router-dom';\nimport RatingBox from '../RatingBox/RatingBox';\nimport propTypes from 'prop-types';\n\nexport class MovieInfoComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isRedirected: false\n    }\n  }\n  redirect = () => {\n    this.setState({isRedirected: true})\n  }\n\n  render() {\n    const { movie, rating, user} = this.props\n    const { id, title, release_date, poster_path, overview, average_rating} = movie;\n    const year = release_date.split('-')[0];\n\n    const cardStyles = {\n      backgroundImage: `url(${poster_path})`,\n      backgroundSize: '100%',\n      backgroundPosition: 'center',\n      width: '230px',\n      height: '300px'\n    }\n    return (\n      (this.state.isRedirected)\n        ? <Redirect to='/' />\n        : <main className=\"single-movie-info\">\n          <button onClick={this.redirect}>&#8592; back to all movies</button>\n          <div className='title-div'><h2>{`${title} (${year})`}</h2></div>\n          <div className='img-container' style={cardStyles}></div>\n          <section className='overview-box'>\n            <h3>Avr.Rating: {average_rating.toFixed(1)}</h3>\n            {user && rating && <h3>{`Your rating: ${rating.rating}`}</h3>}\n            <p>{overview}</p>\n            <footer>\n              {user && !rating && <RatingBox movie_id={id} user_id={user.id} />}\n            </footer>\n          </section>\n        </main>\n    )\n  }\n}\n\nexport const mapStateToProps = ({movies, ratings, user, selectedMovie}) => ({\n  movie: movies.find(movie => movie.id === parseInt(selectedMovie)),\n  rating: ratings.find(rating => rating.movie_id === parseInt(selectedMovie)),\n  user\n});\n\nMovieInfoComponent.propTypes = {\n  movie: propTypes.object,\n  rating: propTypes.string,\n  user: propTypes.string,\n  id: propTypes.number,\n  title: propTypes.string,\n  release_date: propTypes.string, \n  poster_path: propTypes.string, \n  overview: propTypes.string, \n  average_rating: propTypes.string\n}\n\nexport default connect(mapStateToProps)(MovieInfoComponent);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { postSignIn } from '../../apiCalls/apiCalls';\nimport { addUser } from '../../actions';\nimport './Login.scss';\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errorMsg: ''\n    }\n  }\n\n  handleChange = (event) => {\n    let { target } = event;\n    if (this.state.email && this.state.password) {\n      this.setState({errorMsg: ''});\n    }\n    switch(target.id) {\n      case 'email':\n        this.setState({email: target.value})\n        break;\n      case 'password':\n        this.setState({password: target.value})\n        break;\n      default:\n        console.log('hits default');\n    }\n  }\n\n  validateForm = () => {\n    if (this.state.email && this.state.password) {\n      this.setState({errorMsg: ''});\n      return true;\n    } else {\n      this.setState({errorMsg: 'Please enter an email and a password'});\n      return false;\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.validateForm()) {\n      let user = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.fetchUser(user);\n    }\n  }\n\n  fetchUser = async (user) => {\n    try {\n      const result = await postSignIn(user);\n      this.props.addUser(result.user);\n      this.props.history.push('/ratings');\n      this.setState({\n        email: '',\n        password: ''\n      });\n    }\n    catch (error) {\n      this.setState({errorMsg: 'Your email or password was incorrect'});\n    }\n  }\n\n  render() {\n    return (\n      <form className=\"login-form\">\n        <h3>Please sign in to continue</h3>\n        <div className=\"input-wrapper\">\n          <div className=\"error\">{this.state.errorMsg}</div>\n          <label>Email:</label>\n          <input autoComplete=\"off\" id=\"email\" value={this.state.email} type=\"text\" onChange={(event) => this.handleChange(event)}/>\n          <label>Password:</label>\n          <input id=\"password\" value={this.state.password} type=\"password\" onChange={(event) => this.handleChange(event)}/>\n          <button className=\"sign-in\" onClick={(event) => this.handleSubmit(event)}>Sign in</button>\n          <Link id=\"back-home\" to=\"/\">Go back</Link>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addUser\n  }, dispatch)\n)\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport './App.scss';\nimport MoviesContainer from '../../containers/MoviesContainer/MoviesContainer';\nimport Header from '../Header/Header.js';\nimport RatingsPage from '../RatingsPage/RatingsPage';\nimport MovieInfoComponent from '../MovieInfoComponent/MovieInfoComponent';\nimport { Route } from 'react-router-dom';\nimport { getMovies, getRatings } from '../../apiCalls/apiCalls';\nimport { addMovies, addLoaded, hasError, addRatings, addSelectedMovie } from '../../actions';\nimport Login from '../../containers/Login/Login';\n\nexport class App extends Component {\n  componentDidMount() {\n    if (!this.props.isLoaded) this.fetchMoviesData()\n    if (this.props.user) this.fetchRatingsData()\n  }\n\n  fetchMoviesData = async () => {\n    const { addMovies, addLoaded, hasError} = this.props\n    try {\n      const result = await getMovies()\n      addMovies(result.movies)\n      addLoaded(true)\n    }\n    catch (error) {\n      addLoaded(false)\n      hasError(error.message)\n    }\n  }\n\n  fetchRatingsData = async () => {\n    const { addRatings, user } = this.props;\n    try {\n      const result = await getRatings(user.id);\n      addRatings(result.ratings);\n    }\n    catch {\n      addRatings([ ]);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route exact path='/' render={() => {\n          if (this.props.user) this.fetchRatingsData()\n          return (\n            <>\n              <Header />\n              {this.props.user && <NavLink to=\"/ratings\">&#9733; See your ratings</NavLink>}\n              <MoviesContainer />\n            </>\n          )\n        }\n        }/>\n        <Route path=\"/ratings\" render={() => {\n          if (this.props.user) this.fetchRatingsData()\n          return (\n            <>\n              <Header />\n              <RatingsPage />\n            </>\n          )\n        }}/>\n        <Route path=\"/login\" render={() => <Login />}/>\n        <Route path=\"/movies/:id\" render={( { match } ) => {\n          this.props.addSelectedMovie(match.params.id);\n          return (\n            <>\n              <Header />\n              <MovieInfoComponent />\n            </>\n          )\n        }}/>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = ({isLoaded, user}) => ({\n  user,\n  isLoaded\n})\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addMovies,\n    addLoaded,\n    hasError,\n    addRatings,\n    addSelectedMovie\n  }, dispatch)\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nconst storedApp = (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  storedApp,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}